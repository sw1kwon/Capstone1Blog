[
  {
    "objectID": "posts/htmlmarkdown.html",
    "href": "posts/htmlmarkdown.html",
    "title": "HTML & Markdown",
    "section": "",
    "text": "HTML is a markup language that defines the structure of web pages, so understanding the HTML structure is essential for accurately extracting data during web scraping.\n\nUnderstanding Tags and Hierarchy\n\nKnowing the roles of HTML tags such as &lt;div&gt;, &lt;span&gt;, &lt;table&gt;, &lt;ul&gt;, and &lt;li&gt; makes it easier to locate the desired data.\n\nYou can use attributes such as id, class, name, and href to select specific elements.\n\nUsing XPath and CSS Selectors\n\nLibraries like BeautifulSoup (Python) and rvest (R) use CSS selectors or XPath to find specific elements.\n\nExample: soup.select('div.article &gt; p') (BeautifulSoup) or html_nodes(doc, \"div.article &gt; p\") (rvest)\n\nHandling Dynamic Web Pages (Understanding JavaScript Rendering)\n\nSome websites use JavaScript to load data dynamically, so tools like Selenium or Playwright are needed.\n\n\n\n\n\nMarkdown is mainly used for documentation, blog posts, and API docs, and you may need to handle it when extracting data from the web.\n\nHandling Web Pages with Markdown\n\nYou may need to retrieve data stored in Markdown format from websites (e.g., GitHub, Jupyter Notebook, blogs) and convert it to HTML.\n\nYou might also need to restore Markdown after extracting only text from HTML using BeautifulSoup.get_text().\n\nCleaning and Converting Markdown Data\n\nFor example, you may need to crawl text saved in Markdown from a web page and convert it to another format (HTML, LaTeX, etc.).\n\nYou can use markdown2, mistune (Python), or markdown (R package) for conversion."
  },
  {
    "objectID": "posts/htmlmarkdown.html#why-you-need-to-understand-html",
    "href": "posts/htmlmarkdown.html#why-you-need-to-understand-html",
    "title": "HTML & Markdown",
    "section": "",
    "text": "HTML is a markup language that defines the structure of web pages, so understanding the HTML structure is essential for accurately extracting data during web scraping.\n\nUnderstanding Tags and Hierarchy\n\nKnowing the roles of HTML tags such as &lt;div&gt;, &lt;span&gt;, &lt;table&gt;, &lt;ul&gt;, and &lt;li&gt; makes it easier to locate the desired data.\n\nYou can use attributes such as id, class, name, and href to select specific elements.\n\nUsing XPath and CSS Selectors\n\nLibraries like BeautifulSoup (Python) and rvest (R) use CSS selectors or XPath to find specific elements.\n\nExample: soup.select('div.article &gt; p') (BeautifulSoup) or html_nodes(doc, \"div.article &gt; p\") (rvest)\n\nHandling Dynamic Web Pages (Understanding JavaScript Rendering)\n\nSome websites use JavaScript to load data dynamically, so tools like Selenium or Playwright are needed."
  },
  {
    "objectID": "posts/htmlmarkdown.html#why-you-need-to-understand-markdown",
    "href": "posts/htmlmarkdown.html#why-you-need-to-understand-markdown",
    "title": "HTML & Markdown",
    "section": "",
    "text": "Markdown is mainly used for documentation, blog posts, and API docs, and you may need to handle it when extracting data from the web.\n\nHandling Web Pages with Markdown\n\nYou may need to retrieve data stored in Markdown format from websites (e.g., GitHub, Jupyter Notebook, blogs) and convert it to HTML.\n\nYou might also need to restore Markdown after extracting only text from HTML using BeautifulSoup.get_text().\n\nCleaning and Converting Markdown Data\n\nFor example, you may need to crawl text saved in Markdown from a web page and convert it to another format (HTML, LaTeX, etc.).\n\nYou can use markdown2, mistune (Python), or markdown (R package) for conversion."
  },
  {
    "objectID": "posts/htmlmarkdown.html#what-is-html",
    "href": "posts/htmlmarkdown.html#what-is-html",
    "title": "HTML & Markdown",
    "section": "What is HTML?",
    "text": "What is HTML?\n\nHTML (HyperText Markup Language) is used to structure content on the web.\nUses tags to structure content (text, images, links, etc.).\nA basic web page typically includes HTML, CSS, and JavaScript."
  },
  {
    "objectID": "posts/htmlmarkdown.html#basic-structure",
    "href": "posts/htmlmarkdown.html#basic-structure",
    "title": "HTML & Markdown",
    "section": "Basic structure",
    "text": "Basic structure\n\nThe basic structure of an HTML document includes: &lt;html&gt; → &lt;head&gt; → &lt;body&gt;\n\nHTML Example\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Page Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;!-- Content goes here --&gt;\n&lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#common-html-tags",
    "href": "posts/htmlmarkdown.html#common-html-tags",
    "title": "HTML & Markdown",
    "section": "Common HTML Tags",
    "text": "Common HTML Tags\n\n&lt;h1&gt; to &lt;h6&gt;: Headings (&lt;h1&gt; is the largest)\n\n  &lt;h1&gt;Main Title&lt;/h1&gt;\n  &lt;h2&gt;Section Title&lt;/h2&gt;\n\n&lt;p&gt;: Paragraph\n\n&lt;p&gt;This is a paragraph of text.&lt;/p&gt;\n\n&lt;strong&gt;: Bold text\n\n&lt;p&gt;This is &lt;strong&gt;important&lt;/strong&gt; information.&lt;/p&gt;\n\n&lt;em&gt;: Italic text\n\n&lt;p&gt;This word is &lt;em&gt;emphasized&lt;/em&gt;.&lt;/p&gt;\n\n&lt;a href=\"URL\"&gt;: Hyperlink\n\n&lt;a href=\"https://example.com\"&gt;Visit Example&lt;/a&gt;\n\n&lt;img src=\"path\" alt=\"description\"&gt;: Image\n\n&lt;img src=\"profile.jpg\" alt=\"Profile Photo\" width=\"200\"&gt;\n\n&lt;video controls&gt; + &lt;source src=\"file.mp4\" type=\"video/mp4\"&gt;: Embed local video\n\n&lt;video width=\"640\" height=\"360\" controls&gt;\n  &lt;source src=\"my_video.mp4\" type=\"video/mp4\"&gt;\n  Your browser does not support the video tag.\n&lt;/video&gt;\n\n&lt;iframe src=\"https://www.youtube.com/embed/ID\"&gt;: Embed YouTube video\n\n&lt;iframe width=\"640\" height=\"360\"\n        src=\"https://www.youtube.com/embed/VIDEO_ID\"\n        frameborder=\"0\"\n        allowfullscreen&gt;\n&lt;/iframe&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#lists-in-html-ul-ol",
    "href": "posts/htmlmarkdown.html#lists-in-html-ul-ol",
    "title": "HTML & Markdown",
    "section": "Lists in HTML (<ul>, <ol>)",
    "text": "Lists in HTML (&lt;ul&gt;, &lt;ol&gt;)\n\nUsed to display a list of items on a webpage. Two main types:\n\n&lt;ul&gt;: Unordered list (with bullet points)\n&lt;ol&gt;: Ordered list (with numbers)\n&lt;li&gt;: List item\n\n\nHTML Example\n&lt;h2&gt;My Academic Interests&lt;/h2&gt;\n&lt;ul&gt;\n  &lt;li&gt;Statistics&lt;/li&gt;\n  &lt;li&gt;Data Analysis & Data Visualization&lt;/li&gt;\n  &lt;li&gt;Sports Big Data&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;My Hobbies&lt;/h2&gt;\n&lt;ol&gt;\n  &lt;li&gt;Piano&lt;/li&gt;\n  &lt;li&gt;Soccer&lt;/li&gt;\n  &lt;li&gt;Original Sound Track&lt;/li&gt;\n&lt;/ol&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#tables-in-html-table",
    "href": "posts/htmlmarkdown.html#tables-in-html-table",
    "title": "HTML & Markdown",
    "section": "Tables in HTML (<table>)",
    "text": "Tables in HTML (&lt;table&gt;)\nUsed to display structured data in a grid format.\n\n&lt;table&gt;: Table container\n&lt;tr&gt;: Table row\n&lt;th&gt;: Table header cell (bold)\n&lt;td&gt;: Table data cell\n\nHTML Example\n&lt;h2&gt;My Profile&lt;/h2&gt;\n&lt;table border=\"1\"&gt;\n  &lt;tr&gt;\n    &lt;th&gt;Item&lt;/th&gt;\n    &lt;th&gt;Details&lt;/th&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Name&lt;/td&gt;\n    &lt;td&gt;Soonwon KWON&lt;/td&gt;\n  &lt;/tr&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Occupation&lt;/td&gt;\n    &lt;td&gt;Fourth-year student&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#forms-in-html-form",
    "href": "posts/htmlmarkdown.html#forms-in-html-form",
    "title": "HTML & Markdown",
    "section": "Forms in HTML (<form>)",
    "text": "Forms in HTML (&lt;form&gt;)\nUsed to collect user input.\n\n&lt;form&gt;: Wraps the input elements\n&lt;input&gt;: Single-line input field (e.g., text, checkbox, password)\n&lt;textarea&gt;: Multi-line text input\n&lt;button&gt;: Clickable button (submit, etc.)\n\nHTML Example\n&lt;h2&gt;Leave a Message&lt;/h2&gt;\n&lt;form action=\"/submit\" method=\"POST\"&gt;\n  &lt;label for=\"name\"&gt;Name:&lt;/label&gt;\n  &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n\n  &lt;label for=\"message\"&gt;Message:&lt;/label&gt;&lt;br&gt;\n  &lt;textarea id=\"message\" name=\"message\" rows=\"4\" cols=\"40\"&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;\n\n  &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;label&gt;: Describes input field\n&lt;input type=\"text\"&gt;: Single-line text input\n&lt;textarea&gt;: Multi-line text area\n&lt;button type=\"submit\"&gt;: Submit button"
  },
  {
    "objectID": "posts/htmlmarkdown.html#what-is-css",
    "href": "posts/htmlmarkdown.html#what-is-css",
    "title": "HTML & Markdown",
    "section": "What is CSS?",
    "text": "What is CSS?\n\nCSS (Cascading Style Sheets) is a language that controls the style and layout of HTML elements.\nWhile HTML creates the structure, CSS adjusts colors, sizes, and layout."
  },
  {
    "objectID": "posts/htmlmarkdown.html#three-ways-to-apply-css",
    "href": "posts/htmlmarkdown.html#three-ways-to-apply-css",
    "title": "HTML & Markdown",
    "section": "Three Ways to Apply CSS",
    "text": "Three Ways to Apply CSS\n\nInline Style (using style attribute)\nHTML Example\n&lt;p style=\"color: blue;\"&gt;This text is blue.&lt;/p&gt;\n\nStyle applied directly to HTML elements\n\nNot recommended (hard to maintain, messy)\n\n\n\nInternal Style (using &lt;style&gt; tag)\nHTML Example\n&lt;head&gt;\n  &lt;style&gt;\n    p {\n      color: blue;\n      font-size: 18px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n\nCSS written inside the HTML document\n\nUseful for small projects\n\n\n\nExternal Style (recommended)\nHTML Example\n&lt;head&gt;\n  &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n\nCSS written in a separate .css file\n\nEasy to maintain and reuse across pages"
  },
  {
    "objectID": "posts/htmlmarkdown.html#css-syntax-selectors",
    "href": "posts/htmlmarkdown.html#css-syntax-selectors",
    "title": "HTML & Markdown",
    "section": "CSS Syntax & Selectors",
    "text": "CSS Syntax & Selectors\n\nBasic Syntax\nCSS Example\nselector {\n  property: value;\n}\n\nSelector: targets an element\n\nProperty: what you want to change\n\nValue: how you want it to look\n\n\n\nCommon CSS Selectors\n\n\n\n\n\n\n\n\nSelector\nDescription\nExample\n\n\n\n\n*\nAll elements\n* { margin: 0; }\n\n\nh1\nTag name selector\nh1 { color: red; }\n\n\n.class\nClass selector\n.title { font-size: 20px; }\n\n\n#id\nID selector\n#header { background: black; }\n\n\nA, B\nMultiple selectors\nh1, p { color: blue; }\n\n\nA B\nDescendant selector (B inside A)\ndiv p { color: green; }\n\n\n\n\n\nExample CSS\nCSS Example\n/* Apply to whole page */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f0f0;\n}\n\n/* Heading style */\nh1 {\n  color: darkblue;\n  text-align: center;\n}\n\n/* Paragraph style */\np {\n  font-size: 18px;\n  color: gray;\n}"
  },
  {
    "objectID": "posts/htmlmarkdown.html#css-box-model",
    "href": "posts/htmlmarkdown.html#css-box-model",
    "title": "HTML & Markdown",
    "section": "CSS Box Model",
    "text": "CSS Box Model\n\nWhat is the Box Model?\nEvery HTML element is treated as a rectangular box with:\n\nContent: text or image inside\nPadding: space between content and border\nBorder: line surrounding the box\nMargin: space outside the border (separates from other elements)\n\n\n\nBox Model Example\nCSS Example\n.box {\n  width: 300px;\n  padding: 20px;\n  border: 2px solid black;\n  margin: 10px;\n}\n&lt;div class=\"box\"&gt;This is a box model example.&lt;/div&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#css-layout-display-flexbox",
    "href": "posts/htmlmarkdown.html#css-layout-display-flexbox",
    "title": "HTML & Markdown",
    "section": "CSS Layout: display & Flexbox",
    "text": "CSS Layout: display & Flexbox\n\ndisplay Property\n\n\n\nValue\nDescription\n\n\n\n\nblock\nElements stack vertically (e.g., &lt;div&gt;)\n\n\ninline\nElements stay inline (e.g., &lt;span&gt;)\n\n\nflex\nFlexible layout system for arrangement\n\n\n\n\n\nFlexbox Basic Example\nCSS Example\n.container {\n  display: flex;\n  justify-content: space-around;\n}\n.box {\n  width: 100px;\n  height: 100px;\n  background-color: lightblue;\n}\n&lt;div class=\"container\"&gt;\n  &lt;div class=\"box\"&gt;1&lt;/div&gt;\n  &lt;div class=\"box\"&gt;2&lt;/div&gt;\n  &lt;div class=\"box\"&gt;3&lt;/div&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "posts/htmlmarkdown.html#what-is-markdown",
    "href": "posts/htmlmarkdown.html#what-is-markdown",
    "title": "HTML & Markdown",
    "section": "What is Markdown?",
    "text": "What is Markdown?\n\nMarkdown is a lightweight markup language for writing documents using plain text.\nEasier than HTML and highly readable.\nWidely used in platforms like GitHub, Jupyter Notebook, and RMarkdown.\nIn R, Markdown is used in .Rmd files to combine documentation and executable code."
  },
  {
    "objectID": "posts/htmlmarkdown.html#basic-markdown-syntax",
    "href": "posts/htmlmarkdown.html#basic-markdown-syntax",
    "title": "HTML & Markdown",
    "section": "Basic Markdown Syntax",
    "text": "Basic Markdown Syntax\n\nHeaders\n# Header 1  \n## Header 2  \n### Header 3\n\n\nEmphasis\n*Italic* or _Italic_  \n**Bold** or __Bold__  \n~~Strikethrough~~\nItalic , Bold, Strikethrough\n\n\nLists\n\nUnordered List:\n\n- Item 1  \n  - Sub-item 1.1  \n  - Sub-item 1.2  \n- Item 2\n\nOrdered List:\n\n1. First item  \n2. Second item  \n3. Third item\n\n\nLinks\n[CRAN R Official Site](https://cran.r-project.org/)\nCRAN R Official Site\n\n\nImages\n![R Logo](https://www.r-project.org/logo/Rlogo.png)\n\n\n\nR Logo"
  },
  {
    "objectID": "posts/htmlmarkdown.html#what-is-rmarkdown",
    "href": "posts/htmlmarkdown.html#what-is-rmarkdown",
    "title": "HTML & Markdown",
    "section": "What is RMarkdown?",
    "text": "What is RMarkdown?\n\nRMarkdown (.Rmd) is a document format that combines R code and narrative text.\nAllows you to create documents with analysis results and interpretation together.\nOutput formats: HTML, PDF, Word.\nStructure: YAML Header + Markdown Text + R Code Chunks"
  },
  {
    "objectID": "posts/htmlmarkdown.html#rmarkdown-document-structure",
    "href": "posts/htmlmarkdown.html#rmarkdown-document-structure",
    "title": "HTML & Markdown",
    "section": "RMarkdown Document Structure",
    "text": "RMarkdown Document Structure\n\n1. YAML Header\nYAML Header Example\n---\ntitle: \"RMarkdown Example\"\nauthor: \"Soonwon KWON\"\ndate: \"`r Sys.Date()`\"\noutput: html_document\n---\n\nDefines document title, author, date, and output format.\n\n\n\n2. Markdown Text + R Code Chunk\nMarkdown Example\n## Data Analysis Results\n\nHere we compute some basic summary statistics.\n\n```{r}\nsummary(cars)\n```\n\nR code chunks (```{r}) allow you to run R code inside the document.\n\n\n\n3. Output Formats: HTML, PDF, Word\n\nAfter writing your .Rmd file, click the Knit button to render the document.\nRequires the rmarkdown package."
  },
  {
    "objectID": "posts/htmlmarkdown.html#tables-code-blocks-and-math-in-markdown",
    "href": "posts/htmlmarkdown.html#tables-code-blocks-and-math-in-markdown",
    "title": "HTML & Markdown",
    "section": "Tables, Code Blocks, and Math in Markdown",
    "text": "Tables, Code Blocks, and Math in Markdown\n\n1. Creating Tables in Markdown\nMarkdown uses pipes | and hyphens - to format tables.\nBasic Table Example:\n| Name         | Date of Birth | Nationality   |\n|--------------|----------------|----------------|\n| Luka Modrić  | 1985-09-09     | Croatia        |\n| Eden Hazard  | 1991-01-07     | Belgium        |\n\n\n\nName\nDate of Birth\nNationality\n\n\n\n\nLuka Modrić\n1985-09-09\nCroatia\n\n\nEden Hazard\n1991-01-07\nBelgium\n\n\n\n\n\n2. Writing Code Blocks\nUseful for displaying analysis code or command-line instructions clearly.\n\nInline Code:\n`summary(mtcars)`\nMulti-line Code Block (R):\n```r\nsummary(mtcars)\n```\n\n\n\n3. Writing Math with LaTeX\nIn RMarkdown, you can use LaTeX syntax to render math equations.\n\nInline Math:\n\n`$ f(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left( -\\frac{(x - \\mu)^2}{2\\sigma^2} \\right) $`\n\\(f(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left( -\\frac{(x - \\mu)^2}{2\\sigma^2} \\right)\\)\n\nBlock Math:\n\n\n$$\nf(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left( -\\frac{(x - \\mu)^2}{2\\sigma^2} \\right)\n$$\n\\[f(x) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp\\left( -\\frac{(x - \\mu)^2}{2\\sigma^2} \\right)\\]"
  },
  {
    "objectID": "posts/htmlmarkdown.html#using-ggplot2-and-data-tables-in-rmarkdown",
    "href": "posts/htmlmarkdown.html#using-ggplot2-and-data-tables-in-rmarkdown",
    "title": "HTML & Markdown",
    "section": "Using ggplot2 and Data Tables in RMarkdown",
    "text": "Using ggplot2 and Data Tables in RMarkdown\n\nInserting ggplot2 Plots\nR code chunks can include plots using ggplot2.\nBasic ggplot2 Example:\n```{r, echo=FALSE}\nlibrary(ggplot2)\nggplot(mtcars, aes(x = mpg, y = hp, color = factor(cyl))) +\n  geom_point() +\n  theme_minimal()\n```\n\n\nPrinting Clean Tables with kable()\nUse knitr::kable() in RMarkdown to generate clean and formatted tables.\nBasic kable Table Example:\n```{r}\nlibrary(knitr)\nkable(head(mtcars))\n```"
  },
  {
    "objectID": "posts/htmlmarkdown.html#document-format-conversion-in-rmarkdown",
    "href": "posts/htmlmarkdown.html#document-format-conversion-in-rmarkdown",
    "title": "HTML & Markdown",
    "section": "Document Format Conversion in RMarkdown",
    "text": "Document Format Conversion in RMarkdown\n\nOutput Format Options\nRMarkdown supports rendering into various formats:\n\nHTML document (html_document)\nPDF document (pdf_document)\nWord document (word_document)\n\nBasic YAML Header Example:\n---\ntitle: \"Analysis Report\"\nauthor: \"Soonwon KWON\"\ndate: \"`r Sys.Date()`\"\noutput:\n  html_document:\n    toc: true\n    number_sections: true\n---\n\ntoc: true: Adds a table of contents\n\nnumber_sections: true: Adds numbered headings"
  },
  {
    "objectID": "posts/htmlmarkdown.html#creating-interactive-documents",
    "href": "posts/htmlmarkdown.html#creating-interactive-documents",
    "title": "HTML & Markdown",
    "section": "Creating Interactive Documents",
    "text": "Creating Interactive Documents\n\nUsing Shiny in RMarkdown\n\nYou can add interactive features by setting runtime: shiny in the YAML header.\n\nShiny Document Example:\n---\ntitle: \"Interactive Shiny Document\"\noutput: html_document\nruntime: shiny\n---\nMarkdown Example\n## Summary Based on Input\n\n```{r, echo=FALSE}\nlibrary(shiny)\n\nsliderInput(\"obs\", \"Number of observations to show:\", min = 1, max = 100, value = 10)\n\nrenderPrint({\n  summary(mtcars[1:input$obs, ])\n})\n```\n\n\nIntroduction to Flexdashboard\n\nFlexdashboard is a package built on RMarkdown to easily create dashboards.\nIt is useful for displaying multiple visualizations in a single screen layout.\n\nBasic Flexdashboard YAML Header:\n---\ntitle: \"Flexdashboard Example\"\noutput: flexdashboard::flex_dashboard\n---\nFlexdashboard Example Layout:\nColumn {data-width=650}\n-------------------------------------\n\n### ggplot2 Scatter Plot\n\n```{r}\nlibrary(ggplot2)\nggplot(mtcars, aes(x = mpg, y = hp, color = factor(cyl))) +\n  geom_point()\n```\n\nColumn {data-width=350}\n-------------------------------------\n\n### Data Table\n\n```{r}\nlibrary(DT)\ndatatable(mtcars)\n```"
  },
  {
    "objectID": "posts/htmlmarkdown.html#writing-a-practical-report",
    "href": "posts/htmlmarkdown.html#writing-a-practical-report",
    "title": "HTML & Markdown",
    "section": "Writing a Practical Report",
    "text": "Writing a Practical Report\n\nKey Components of a Good Report\n\nSet title, author, and date using a YAML header\n\nInclude a table of contents (toc: true) and section numbering (number_sections: true)\n\nSummarize data, visualize results, and report key statistics\n\nPresent conclusions and directions for further analysis\n\n\n\nExample Report Template\nYAML Header Example:\n---\ntitle: \"Customer Data Analysis Report\"\nauthor: \"Soonwon KWON\"\ndate: \"`r Sys.Date()`\"\noutput:\n  html_document:\n    toc: true\n    number_sections: true\n---\nMarkdown Example:\n## 1. Data Overview\n\nThis report presents an analysis of customer data.\n\n```{r}\nlibrary(dplyr)\ndata &lt;- mtcars %&gt;% group_by(cyl) %&gt;% summarise(avg_mpg = mean(mpg))\nknitr::kable(data)\n```\n\n## 2. Visualization\n\n```{r}\nlibrary(ggplot2)\nggplot(mtcars, aes(x = mpg, y = hp, color = factor(cyl))) +\n  geom_point() +\n  theme_minimal()\n```\n\n## 3. Conclusion & Insights\n\n- Cars with a higher number of cylinders (`cyl`) tend to have lower fuel efficiency (`mpg`).  \n- Further data collection and analysis are recommended."
  },
  {
    "objectID": "posts/htmlmarkdown.html#repetitive-analysis-automated-report-generation",
    "href": "posts/htmlmarkdown.html#repetitive-analysis-automated-report-generation",
    "title": "HTML & Markdown",
    "section": "Repetitive Analysis & Automated Report Generation",
    "text": "Repetitive Analysis & Automated Report Generation\n\nParameterized Reports\n\nUseful when applying the same analysis to different datasets\n\nYou can use params to dynamically insert input values and automate report generation\n\n\n\nExample of a Parameterized Report Using params\nYAML Header Example:\n---\ntitle: \"Automated Analysis Report\"\noutput: html_document\nparams:\n  dataset: \"mtcars\"\n---\nMarkdown Example:\n## Data Summary\n\nTarget dataset: `r params$dataset`\n\n```{r}\ndataset &lt;- get(params$dataset)\nsummary(dataset)\n```"
  },
  {
    "objectID": "posts/htmlmarkdown.html#the-role-of-markdown-on-github",
    "href": "posts/htmlmarkdown.html#the-role-of-markdown-on-github",
    "title": "HTML & Markdown",
    "section": "The Role of Markdown on GitHub",
    "text": "The Role of Markdown on GitHub\n\nWhy Markdown is Important on GitHub\n\nGitHub uses Markdown (.md files) as the default format for writing project documents\n\nMarkdown is useful for explaining project details, installation steps, and usage examples\n\nIt also enhances formatting inside GitHub Issues and Pull Requests (PRs)\n\n\n\nCommon Use Cases\n\nREADME.md – Describe the project, how to install/use it\n\nCONTRIBUTING.md – Guide for contributing to the project\n\nIssues / Pull Requests – Report bugs, request features, summarize changes"
  },
  {
    "objectID": "posts/htmlmarkdown.html#writing-a-readme.md-file",
    "href": "posts/htmlmarkdown.html#writing-a-readme.md-file",
    "title": "HTML & Markdown",
    "section": "Writing a README.md File",
    "text": "Writing a README.md File\n\nBasic README.md Template\n# Project Title\n\n## Introduction\nThis project is an example to learn **how to use Markdown on GitHub**.\n\n## Installation\n1. Clone this repository:\n   ```\n   git clone https://github.com/username/repository.git\n   ```\n2. Install the required packages  \n3. Run the project  \n\n## Usage Example\n```r\nprint(\"Hello, GitHub Markdown!\")\n```\n\n## How to Contribute\n1. Open an issue  \n2. Create a branch and make your changes  \n3. Submit a Pull Request (PR)  \n\n## License\nMIT License\n\nUse # for section headings\n\nUse **bold** to emphasize text\n\nUse backticks for inline code and code blocks"
  },
  {
    "objectID": "posts/htmlmarkdown.html#using-markdown-in-github-issues-pull-requests",
    "href": "posts/htmlmarkdown.html#using-markdown-in-github-issues-pull-requests",
    "title": "HTML & Markdown",
    "section": "Using Markdown in GitHub Issues & Pull Requests",
    "text": "Using Markdown in GitHub Issues & Pull Requests\n\nMarkdown in Issues\n\nUse Markdown to clearly format bug reports, feature requests, and tasks\n\nUse checklists, mentions (@username), and issue references (#issue-number)\n\n\n\nIssue Template Example\n## 🐞 Bug Report\n\n### Description\n- [ ] Behavior is different from expected  \n- [ ] Certain feature is not working  \n\n### Steps to Reproduce\n1. Run this command: `python script.py`  \n2. Error message:  \n   ```\n   Error: File not found.\n   ```\n\n### Expected Result\nIt should run without errors.\n\n### Environment\n- OS: Ubuntu 22.04  \n- R Version: 4.1.2\n\n\nMarkdown in Pull Requests (PRs)\n\nUse Markdown to document changes, summarize commits, and list test results\n\nInclude checklists to guide code review\n\n\n\nPull Request Template Example\n## Changes Made\n- Added new feature (`feature-branch`)  \n- Refactored existing code  \n\n## Checklist\n- [x] Code successfully runs  \n- [x] Documentation updated  \n- [ ] Additional tests needed  \n\n## Screenshots\n(Include UI or output images if applicable)\n\n## Related Issues\nFixes #12"
  },
  {
    "objectID": "posts/PPDAC.html",
    "href": "posts/PPDAC.html",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "",
    "text": "Reasoning Method\nDescription\nAdvantages\nDisadvantages\n\n\n\n\nDeductive Reasoning\nGeneral principles → Specific conclusion\nEnsures logical certainty\nErrors occur if premises are incorrect\n\n\nInductive Reasoning\nSpecific cases → General principle\nUseful for scientific research and data analysis\nDifficult to ensure absolute certainty\n\n\nAbductive Reasoning\nSelecting the most plausible explanation\nUseful for solving real-world problems\nPossibility of errors\n\n\nProbabilistic Reasoning\nDrawing conclusions using probability\nUseful for AI and data analysis\nNo 100% certainty\n\n\nIntuitive Reasoning\nQuick judgment based on experience\nExperts can make quick decisions\nRisk of subjective errors\n\n\nEmotional Reasoning\nJudgment influenced by emotions\nAllows human-centered judgment\nCan lead to irrational conclusions\n\n\nDialectical Reasoning\nResolving conflicts between opposing concepts\nUseful for philosophical debates\nDifficult to experimentally verify\n\n\n\n\n\n\nReasoning is divided into logical reasoning (e.g., deduction, induction, abduction) and non-logical reasoning (e.g., intuition, emotion, dialectical reasoning).\nEach method is appropriately used depending on the context and purpose.\nReasoning plays a crucial role in various fields, including scientific exploration, data analysis, legal arguments, artificial intelligence, and political debates."
  },
  {
    "objectID": "posts/PPDAC.html#conclusion",
    "href": "posts/PPDAC.html#conclusion",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "",
    "text": "Reasoning is divided into logical reasoning (e.g., deduction, induction, abduction) and non-logical reasoning (e.g., intuition, emotion, dialectical reasoning).\nEach method is appropriately used depending on the context and purpose.\nReasoning plays a crucial role in various fields, including scientific exploration, data analysis, legal arguments, artificial intelligence, and political debates."
  },
  {
    "objectID": "posts/PPDAC.html#summary-conclusion",
    "href": "posts/PPDAC.html#summary-conclusion",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "Summary & Conclusion",
    "text": "Summary & Conclusion\n\nStatistical reasoning is the process of interpreting and logically evaluating data.\n\nStatistical inference is the mathematical process of drawing conclusions about a population based on sample data.\n\nTo perform statistical inference effectively, statistical reasoning must first be well developed.\n\nIn data analysis, both concepts must be applied together to reach accurate conclusions."
  },
  {
    "objectID": "posts/PPDAC.html#historical-development-of-frameworks",
    "href": "posts/PPDAC.html#historical-development-of-frameworks",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "Historical Development of Frameworks",
    "text": "Historical Development of Frameworks\n\n\n\n\n\n\n\n\nEra\nMajor Developments\nRepresentative Concepts\n\n\n\n\n17th~18th Century\nEmergence of the scientific method\nInductive reasoning, deductive reasoning\n\n\n19th Century\nDevelopment of probability theory and statistics\nBayesian probability, hypothesis testing\n\n\nEarly 20th Century\nExperimental design and quality control\nDOE (Design of Experiments), Six Sigma\n\n\nMid 20th Century\nComputer-based statistical analysis\nSPSS, SAS\n\n\n1990s\nIntroduction of data mining concepts\nCRISP-DM, DMAIC\n\n\n2000s\nExpansion of statistics and data science\nPPDAC, GAISE, DDDM\n\n\n2010s and beyond\nBig data and AI-driven analysis\nAutomated data analysis"
  },
  {
    "objectID": "posts/PPDAC.html#ppdac-framework",
    "href": "posts/PPDAC.html#ppdac-framework",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "1. PPDAC Framework",
    "text": "1. PPDAC Framework\n(Problem, Plan, Data, Analysis, Conclusion)\nThe PPDAC framework is a representative statistical problem-solving framework that focuses on data-driven problem resolution.\n\nPPDAC Process\n\n\n\nStage\nDescription\n\n\n\n\nProblem\nDefine the statistical problem to be solved\n\n\nPlan\nDesign the data collection and analysis methods\n\n\nData\nCollect appropriate data\n\n\nAnalysis\nAnalyze the data using statistical methods\n\n\nConclusion\nInterpret analysis results and make decisions\n\n\n\n\n\nKey Features:\n\nThe most standardized statistical problem-solving process\n\nWidely used in data analysis projects across various domains"
  },
  {
    "objectID": "posts/PPDAC.html#gaise-framework",
    "href": "posts/PPDAC.html#gaise-framework",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "2. GAISE Framework",
    "text": "2. GAISE Framework\n(Guidelines for Assessment and Instruction in Statistics Education)\nThe GAISE framework is a step-by-step approach to statistical education proposed by the American Statistical Association (ASA).\n\nGAISE Process\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nFormulate Questions\nDefine the research problem\n\n\nCollect Data\nGather relevant data\n\n\nAnalyze Data\nExplore the data and apply statistical methods\n\n\nInterpret Results\nMake decisions based on the analysis results\n\n\n\n\n\nKey Features:\n\nSimilar to PPDAC, but simplified to fit educational purposes"
  },
  {
    "objectID": "posts/PPDAC.html#data-driven-decision-making-dddm-framework",
    "href": "posts/PPDAC.html#data-driven-decision-making-dddm-framework",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "3. Data-Driven Decision Making (DDDM) Framework",
    "text": "3. Data-Driven Decision Making (DDDM) Framework\nThe DDDM framework is a statistical approach to making decisions based on data analysis.\n\nDDDM Process\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nIdentify Problem\nDefine the problem that needs to be solved\n\n\nCollect & Prepare Data\nGather and preprocess relevant data\n\n\nAnalyze Data\nApply statistical methods and data modeling\n\n\nInterpret & Apply\nMake decisions based on analysis results\n\n\nMonitor & Adjust\nContinuously track data and optimize decisions\n\n\n\n\n\nKey Features:\n\nUsed in business and policy decision-making\n\nRelies on statistical methods for practical decision-making"
  },
  {
    "objectID": "posts/PPDAC.html#hypothesis-testing-process",
    "href": "posts/PPDAC.html#hypothesis-testing-process",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "4. Hypothesis Testing Process",
    "text": "4. Hypothesis Testing Process\nHypothesis testing is a process used to evaluate research questions through statistical inference.\n\nHypothesis Testing Steps\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nState Hypotheses\nDefine the null hypothesis \\((H_0)\\) and alternative hypothesis \\((H_1)\\)\n\n\nChoose Significance Level\nDetermine the significance level \\((\\alpha)\\)\n\n\nCollect & Analyze Data\nGather sample data and compute test statistics\n\n\nMake a Decision\nConduct significance testing and either accept or reject the hypothesis\n\n\nInterpret & Report\nApply the results to research or policy decisions\n\n\n\n\n\nKey Features:\n\nApplied in research and experimental design\n\nClosely related to the analysis and conclusion phases of the PPDAC framework"
  },
  {
    "objectID": "posts/PPDAC.html#design-of-experiments-doe",
    "href": "posts/PPDAC.html#design-of-experiments-doe",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "5. Design of Experiments (DOE)",
    "text": "5. Design of Experiments (DOE)\nThe DOE framework is a statistical approach to drawing conclusions based on experimental data.\n\nDOE Process\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nDefine Objective\nEstablish experiment objectives and hypotheses\n\n\nDesign Experiment\nDetermine factors and levels for the experiment\n\n\nCollect Data\nConduct the experiment and record data\n\n\nAnalyze Data\nEvaluate factor effects using statistical tests\n\n\nDraw Conclusions\nMake decisions based on experimental results\n\n\n\n\n\nKey Features:\n\nApplied in industrial process optimization, A/B testing, and clinical trials\n\nSimilar to PPDAC but emphasizes an experimental approach"
  },
  {
    "objectID": "posts/PPDAC.html#crisp-dm-cross-industry-standard-process-for-data-mining",
    "href": "posts/PPDAC.html#crisp-dm-cross-industry-standard-process-for-data-mining",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "6. CRISP-DM (Cross Industry Standard Process for Data Mining)",
    "text": "6. CRISP-DM (Cross Industry Standard Process for Data Mining)\nCRISP-DM is a widely used framework in data analysis and data mining projects.\n\nCRISP-DM Process\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nBusiness Understanding\nDefine analysis objectives and goals\n\n\nData Understanding\nIdentify key characteristics of the data\n\n\nData Preparation\nClean and preprocess the data\n\n\nModeling\nApply statistical methods and machine learning\n\n\nEvaluation\nAssess model performance and analysis results\n\n\nDeployment\nImplement the analysis results in business applications\n\n\n\n\n\nKey Features:\n\nSimilar to PPDAC, but focuses on data mining and machine learning applications"
  },
  {
    "objectID": "posts/PPDAC.html#dcova-framework",
    "href": "posts/PPDAC.html#dcova-framework",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "7. DCOVA Framework",
    "text": "7. DCOVA Framework\n(Define, Collect, Organize, Visualize, Analyze)\nDCOVA is a structured framework for solving problems through data analysis.\n\nDCOVA Process\n\n\n\n\n\n\n\nStage\nDescription\n\n\n\n\nDefine\nDefine the problem to be solved\n\n\nCollect\nGather the necessary data\n\n\nOrganize\nStructure and clean the data\n\n\nVisualize\nExplore patterns through data visualization\n\n\nAnalyze\nApply statistical analysis and modeling\n\n\n\n\n\nKey Features:\n\nHighly similar to PPDAC, but with an emphasis on data visualization"
  },
  {
    "objectID": "posts/PPDAC.html#comparison-of-frameworks-similar-to-ppdac",
    "href": "posts/PPDAC.html#comparison-of-frameworks-similar-to-ppdac",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "Comparison of Frameworks Similar to PPDAC",
    "text": "Comparison of Frameworks Similar to PPDAC\n\n\n\n\n\n\n\n\nFramework\nKey Features\nDifferences from PPDAC\n\n\n\n\nGAISE\nStep-by-step approach for statistical education\nFocuses on education and practice\n\n\nDDDM\nData-driven decision-making process\nOptimized for business analysis\n\n\nHypothesis Testing Process\nSolves problems through statistical hypothesis testing\nFocuses on specific testing methods\n\n\nDOE (Design of Experiments)\nStatistical validation through experiments\nEmphasizes experimental data\n\n\nCRISP-DM\nApplies data mining and machine learning\nStrong focus on modeling processes\n\n\nDCOVA\nIncludes data analysis and visualization\nEmphasizes visualization processes"
  },
  {
    "objectID": "posts/PPDAC.html#conclusion-1",
    "href": "posts/PPDAC.html#conclusion-1",
    "title": "Statistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving",
    "section": "Conclusion",
    "text": "Conclusion\nPPDAC is the most general statistical problem-solving process, but different frameworks can be utilized depending on specific purposes such as education, business, experimental design, or machine learning.\n\nEducation and research purposes: GAISE, Hypothesis Testing Process\n\nBusiness analysis and optimization: DDDM, DCOVA\n\nExperiment and test-based analysis: DOE\n\nMachine learning and data mining: CRISP-DM\n\n\nIn statistical problem-solving, PPDAC is the most versatile framework, but it is essential to use other frameworks as needed!"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html",
    "href": "posts/htmlmarkdownpractice.html",
    "title": "HTML & Markdown Practice",
    "section": "",
    "text": "Related content: https://sw1kwon.github.io/Capstone1Blog/posts/htmlmarkdown.html#css-basics-webpage-styling\n\n\nFiles to Submit:\n\nmy_page_styled.html, styles.css\n\nRequired Elements:\n\nUse background-color and color properties to set background and text colors\nUse padding, margin, and border properties to style content boxes\nUse text-align to center-align the title\n\nOptional Challenge Tasks:\n\nAdd styles to a button (e.g., using background-color, border-radius)\n\nApply a hover effect to change the button style on mouseover\n\n\n\n\nhttps://sw1kwon.github.io/assets/html/my_page_styled.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice",
    "href": "posts/htmlmarkdownpractice.html#practice",
    "title": "HTML & Markdown Practice",
    "section": "",
    "text": "https://sw1kwon.github.io/assets/html/my_page_styled.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice-1",
    "href": "posts/htmlmarkdownpractice.html#practice-1",
    "title": "HTML & Markdown Practice",
    "section": "Practice",
    "text": "Practice\nhttps://sw1kwon.github.io/assets/html/my_analysis.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice-2",
    "href": "posts/htmlmarkdownpractice.html#practice-2",
    "title": "HTML & Markdown Practice",
    "section": "Practice",
    "text": "Practice\nhttps://sw1kwon.github.io/assets/html/my_analysis2.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice-3",
    "href": "posts/htmlmarkdownpractice.html#practice-3",
    "title": "HTML & Markdown Practice",
    "section": "Practice",
    "text": "Practice\nhttps://sw1kwon.github.io/assets/html/my_dashboard.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice-4",
    "href": "posts/htmlmarkdownpractice.html#practice-4",
    "title": "HTML & Markdown Practice",
    "section": "Practice",
    "text": "Practice\nhttps://sw1kwon.github.io/assets/html/final_report.html"
  },
  {
    "objectID": "posts/htmlmarkdownpractice.html#practice-5",
    "href": "posts/htmlmarkdownpractice.html#practice-5",
    "title": "HTML & Markdown Practice",
    "section": "Practice",
    "text": "Practice\n\nGitHub repository URL (with a README.md file)\nhttps://github.com/sw1kwon/EPLdata\n\n\n\nCreate an Issue template under .github/ISSUE_TEMPLATE/\n\n\n\nAdd a Pull Request template using .github/PULL_REQUEST_TEMPLATE.md\n\n\n\nWrite a README.md file in your GitHub repository including:\n# rank\n\nEach file contains season-specific standings, separated into:\n\n## Data Coverage\n\n- Seasons: 1992–93 (`9293`) to 2023–24 (`2324`)\n- Match Type:\n  - `All` (overall matches)\n  - `Home` (home performance only)\n  - `Away` (away performance only)\n\n## Repository Structure\n\n```\n/rank/\n├── rank_9293All.csv\n├── rank_9293Home.csv\n├── rank_9293Away.csv\n├── ...\n└── rank_2324All.csv\n```\n\n# season_dashboard.Rmd\n\n## EPL Dashboard Overview\n\nThis dashboard, written in R using **RMarkdown + Flexdashboard + Plotly**, provides a visual summary of EPL standings for a given season and match type (All / Home / Away).\n\n## How It Works\n\n- CSV data is loaded directly from GitHub using the `params$season` and `params$type` values.\n\n## Dashboard Layout\n\nThe dashboard consists of two columns:\n\n### Left Column: Full Standings Table\n\n- Displays the full league table using `DT::datatable()`\n- Supports pagination and horizontal scroll for better viewing\n\n### Right Column: Visual Analytics\n\n#### 1. **Top 5 Teams by Points**\n\n- Bar chart showing the top 5 teams\n- Each bar includes a tooltip with:\n  - Win / Draw / Loss record\n  - GF, GA, GD values\n- Points are labeled outside the bar\n\n#### 2. **Points vs Goal Difference**\n\n- Scatter plot comparing `Points` vs `GD` for all teams\n- Color gradient represents `Pos` (position):  \n  - `darkorange` for higher rank (lower number)  \n  - `skyblue` for lower rank (higher number)\n- Interactive tooltips show team names and key stats\n\n## Parameters Used\n\n```yaml\nparams:\n  season: \"2223\"\n  type: \"All\"\n```\n\n\nseason_dashboard.Rmd\n---\ntitle: \"EPL Season Report\"\nauthor: \"Soonwon KWON\"\ndate: \"`r Sys.Date()`\"\noutput: \n  flexdashboard::flex_dashboard:\n    orientation: columns\n    vertical_layout: scroll\n    theme: flatly\nparams:\n  season: \"9293\"\n  type: \"All\"    # All, Home, Away\n---\n\n```{r setup, include=FALSE}\nlibrary(tidyverse)\nlibrary(DT)\n\nbase_url &lt;- \"https://raw.githubusercontent.com/sw1kwon/EPLdata/refs/heads/main/rank/\"\n\ncsv_file &lt;- paste0(\"rank_\", params$season, params$type, \".csv\")\nfull_url &lt;- paste0(base_url, csv_file)\n\ndf &lt;- read.csv(full_url)\n\nstr(df)\n```\n\n### Column {data-width=500}\n-----------------------------------------------------------------------\n\n### 🏆 Full Standings Table\n\n```{r}\ndatatable(df, options = list(pageLength = 10, scrollX = TRUE))\n```\n\n---\n\n### Column {data-width=500}\n-----------------------------------------------------------------------\n\n### 🔝 Top 5 Teams by Points\n\n```{r}\nlibrary(plotly)\n\ntop_n &lt;- df %&gt;% \n  arrange(desc(Points)) %&gt;% \n  slice_head(n = 5)\n\np1 &lt;- ggplot(top_n, aes(x = reorder(Team, Points), y = Points,\n                        fill = Team,\n                        text = paste0(\n                          \"Won: \", Won, \", Drawn: \", Drawn, \", Lost: \", Lost, \"&lt;br&gt;\",\n                          \"GF: \", GF, \", GA: \", GA, \"&lt;br&gt;\",\n                          \"GD: \", GD\n                        ))) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = Points), hjust = -0.2, size = 4) +\n  coord_flip() +\n  labs(title = paste(\"Top 5 Teams -\", params$season, params$type),\n       x = \"Team\", y = \"Points\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\nggplotly(p1, tooltip = \"text\")\n```\n\n---\n\n### ⚽ Points vs Goal Difference\n\n```{r}\np2 &lt;- ggplot(df, aes(x = GD, y = Points,\n                     color = Pos,\n                     text = paste0(\n                       \"Team: \", Team, \"&lt;br&gt;\",\n                       \"Pos: \", Pos, \" | Points: \", Points, \"&lt;br&gt;\",\n                       \"GF: \", GF, \", GA: \", GA, \" | GD: \", GD\n                     ))) +\n  geom_point(size = 3) +\n  scale_color_gradient(low = \"darkorange\", high = \"skyblue\") +\n  labs(\n    title = paste(\"Performance Overview -\", params$season, params$type),\n    x = \"Goal Difference (GD)\", y = \"Points (Pts)\"\n  ) +\n  theme_minimal()\n\nggplotly(p2, tooltip = \"text\")\n```\n\n\nCreate an Issue on GitHub and describe it using Markdown formatting\n\n\n\nCreate a Pull Request and write a Markdown-formatted message\n\n\nData Notes\n\nAt the time, I was working on a database project. During the crawling and preprocessing phase, I intentionally removed the GD (Goal Difference) column, since it could be calculated using GF - GA.\nHowever, I chose to keep the Points column because in some cases, the points did not follow the standard formula 3 × Won + 1 × Drawn + 0 × Lost, due to point deductions from disciplinary sanctions.\n\n\n\n\nImportant Notes\n\nAt the bottom of the edit page, select “Create a new branch for this commit and start a pull request”\nSuggested branch name: fix/add-gd-column\nMake sure to include the line Fixes #1 in the pull request description (replace 1 with your actual issue number)\nGitHub does not distinguish letter case: fixes, Fixes, and FIXES are all valid\nThe issue will only be automatically closed after the pull request is merged into the main branch\n\n\n\n\n\n\nEdit a README.md file\n\nAdd the following sentence:\n\nIf the dataset does not contain the GD (Goal Difference) column, it is automatically calculated as GF - GA.\n# rank\n\nEach file contains season-specific standings, separated into:\n\n## Data Coverage\n\n- Seasons: 1992–93 (`9293`) to 2023–24 (`2324`)\n- Match Type:\n  - `All` (overall matches)\n  - `Home` (home performance only)\n  - `Away` (away performance only)\n\n## Repository Structure\n\n```\n/rank/\n├── rank_9293All.csv\n├── rank_9293Home.csv\n├── rank_9293Away.csv\n├── ...\n└── rank_2324All.csv\n```\n\n# season_dashboard.Rmd\n\n## EPL Dashboard Overview\n\nThis dashboard, written in R using **RMarkdown + Flexdashboard + Plotly**, provides a visual summary of EPL standings for a given season and match type (All / Home / Away).\n\n## How It Works\n\n- CSV data is loaded directly from GitHub using the `params$season` and `params$type` values.\n- If the dataset does not contain the `GD` (Goal Difference) column, it is automatically calculated as `GF - GA`.\n\n## Dashboard Layout\n\nThe dashboard consists of two columns:\n\n### Left Column: Full Standings Table\n\n- Displays the full league table using `DT::datatable()`\n- Supports pagination and horizontal scroll for better viewing\n\n### Right Column: Visual Analytics\n\n#### 1. **Top 5 Teams by Points**\n\n- Bar chart showing the top 5 teams\n- Each bar includes a tooltip with:\n  - Win / Draw / Loss record\n  - GF, GA, GD values\n- Points are labeled outside the bar\n\n#### 2. **Points vs Goal Difference**\n\n- Scatter plot comparing `Points` vs `GD` for all teams\n- Color gradient represents `Pos` (position):  \n  - `darkorange` for higher rank (lower number)  \n  - `skyblue` for lower rank (higher number)\n- Interactive tooltips show team names and key stats\n\n## Parameters Used\n\n```yaml\nparams:\n  season: \"2223\"\n  type: \"All\"\n```\n\n\nModified Dashboard Example\nhttps://sw1kwon.github.io/assets/html/final_report.html\n\nseason_dashboard.Rmd\n\nhttps://github.com/sw1kwon/EPLdata/blob/main/rank/season_dashboard.Rmd\n---\ntitle: \"EPL Season Report\"\nauthor: \"Soonwon KWON\"\ndate: \"`r Sys.Date()`\"\noutput: \n  flexdashboard::flex_dashboard:\n    orientation: columns\n    vertical_layout: scroll\n    theme: flatly\nparams:\n  season: \"9293\"\n  type: \"All\"    # All, Home, Away\n---\n\n```{r setup, include=FALSE}\nlibrary(tidyverse)\nlibrary(DT)\n\nbase_url &lt;- \"https://raw.githubusercontent.com/sw1kwon/EPLdata/refs/heads/main/rank/\"\n\ncsv_file &lt;- paste0(\"rank_\", params$season, params$type, \".csv\")\nfull_url &lt;- paste0(base_url, csv_file)\n\ndf &lt;- read.csv(full_url)\n\n\n# GD (Goal Difference)\nif (!\"GD\" %in% names(df) & all(c(\"GF\", \"GA\") %in% names(df))) {\n  df &lt;- df %&gt;% mutate(GD = GF - GA)\n}\n\n\nstr(df)\n```\n\n### Column {data-width=500}\n-----------------------------------------------------------------------\n\n### 🏆 Full Standings Table\n\n```{r}\ndatatable(df, options = list(pageLength = 10, scrollX = TRUE))\n```\n\n---\n\n### Column {data-width=500}\n-----------------------------------------------------------------------\n\n### 🔝 Top 5 Teams by Points\n\n```{r}\nlibrary(plotly)\n\ntop_n &lt;- df %&gt;% \n  arrange(desc(Points)) %&gt;% \n  slice_head(n = 5)\n\np1 &lt;- ggplot(top_n, aes(x = reorder(Team, Points), y = Points,\n                        fill = Team,\n                        text = paste0(\n                          \"Won: \", Won, \", Drawn: \", Drawn, \", Lost: \", Lost, \"&lt;br&gt;\",\n                          \"GF: \", GF, \", GA: \", GA, \"&lt;br&gt;\",\n                          \"GD: \", GD\n                        ))) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = Points), hjust = -0.2, size = 4) +\n  coord_flip() +\n  labs(title = paste(\"Top 5 Teams -\", params$season, params$type),\n       x = \"Team\", y = \"Points\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\nggplotly(p1, tooltip = \"text\")\n```\n\n---\n\n### ⚽ Points vs Goal Difference\n\n```{r}\np2 &lt;- ggplot(df, aes(x = GD, y = Points,\n                     color = Pos,\n                     text = paste0(\n                       \"Team: \", Team, \"&lt;br&gt;\",\n                       \"Pos: \", Pos, \" | Points: \", Points, \"&lt;br&gt;\",\n                       \"GF: \", GF, \", GA: \", GA, \" | GD: \", GD\n                     ))) +\n  geom_point(size = 3) +\n  scale_color_gradient(low = \"darkorange\", high = \"skyblue\") +\n  labs(\n    title = paste(\"Performance Overview -\", params$season, params$type),\n    x = \"Goal Difference (GD)\", y = \"Points (Pts)\"\n  ) +\n  theme_minimal()\n\nggplotly(p2, tooltip = \"text\")\n```"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CapstoneDesign1",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nApr 5, 2025\n\n\nStatic and Dynamic Web Crawling with R & Python\n\n\nsw1kwon \n\n\n\n\nMar 31, 2025\n\n\nHTML & Markdown Practice\n\n\nsw1kwon \n\n\n\n\nMar 30, 2025\n\n\nHTML & Markdown\n\n\nsw1kwon \n\n\n\n\nMar 24, 2025\n\n\nCreating a Two-Digit Number from Two Dice Rolls: A Game Strategy\n\n\nsw1kwon \n\n\n\n\nMar 23, 2025\n\n\nStatistical Reasoning and Statistical Inference – Utilizing Frameworks for Problem Solving\n\n\nsw1kwon \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/crawling.html",
    "href": "posts/crawling.html",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "",
    "text": "Web crawling: Navigating and collecting data from across multiple web pages\n\nWeb scraping: Extracting specific information from a single page\n\nDepending on the target, crawling is categorized as static (HTML-based) or dynamic (JavaScript-based)"
  },
  {
    "objectID": "posts/crawling.html#static-web-crawling-rvest",
    "href": "posts/crawling.html#static-web-crawling-rvest",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Static Web Crawling (rvest)",
    "text": "Static Web Crawling (rvest)\n\nUse the rvest package to extract content directly from HTML pages\n\nFunctions like read_html(), html_nodes(), and html_text() help collect text, links, etc.\n\nTables built with &lt;table&gt; tags can be converted into data frames using html_table()\n\nUse dplyr for cleaning the data and write.csv() to save it"
  },
  {
    "objectID": "posts/crawling.html#api-based-data-collection-httr-jsonlite",
    "href": "posts/crawling.html#api-based-data-collection-httr-jsonlite",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "API-Based Data Collection (httr, jsonlite)",
    "text": "API-Based Data Collection (httr, jsonlite)\n\nAPIs provide structured data (JSON/XML) directly from the server\n\nUse httr::GET() to request data and jsonlite::fromJSON() to parse the JSON response\n\nAPI-based collection is faster and more stable than HTML scraping\n\nYou can extract fields like article titles, links, and dates, and save them as CSV"
  },
  {
    "objectID": "posts/crawling.html#dynamic-crawling-with-javascript-rselenium",
    "href": "posts/crawling.html#dynamic-crawling-with-javascript-rselenium",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Dynamic Crawling with JavaScript (RSelenium)",
    "text": "Dynamic Crawling with JavaScript (RSelenium)\n\nPages rendered by JavaScript cannot be scraped using rvest\n\nUse RSelenium to automate a browser and interact with JavaScript-based pages\n\nSimulate user actions like clicking buttons, scrolling down, or handling infinite scroll\n\nRequires setting up a web driver, and may depend on the system configuration"
  },
  {
    "objectID": "posts/crawling.html#handling-login-and-sessions-httrpost",
    "href": "posts/crawling.html#handling-login-and-sessions-httrpost",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Handling Login and Sessions (httr::POST())",
    "text": "Handling Login and Sessions (httr::POST())\n\nSome websites require login before data can be accessed\n\nSimulate login with httr::POST() and maintain session cookies\n\nNote: Many modern websites use CAPTCHA or 2FA, so automatic login may be blocked\n\nWhen possible, prefer official APIs with proper authentication"
  },
  {
    "objectID": "posts/crawling.html#automation-and-real-world-projects",
    "href": "posts/crawling.html#automation-and-real-world-projects",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Automation and Real-World Projects",
    "text": "Automation and Real-World Projects\n\nTo run crawlers regularly, you need automation tools\n\nLinux: Use cronR; Windows: Use taskscheduleR\n\nExample projects:\n\nDaily crawling of trending news, saved to a cumulative CSV\nMonitoring product price changes or trending keywords\n\n\nWhen automating, also consider logging, date-tracking, and duplicate removal"
  },
  {
    "objectID": "posts/crawling.html#key-takeaways",
    "href": "posts/crawling.html#key-takeaways",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nStatic scraping: rvest, html_table, dplyr\n\nAPI-based: httr::GET(), jsonlite::fromJSON()\n\nDynamic pages: RSelenium for JavaScript interactions\n\nLogin/session handling: httr::POST()\n\nAutomation: cronR (Linux), taskscheduleR (Windows)\n\nAll techniques come together in real-world data collection projects"
  },
  {
    "objectID": "posts/crawling.html#static-web-crawling-requests-beautifulsoup",
    "href": "posts/crawling.html#static-web-crawling-requests-beautifulsoup",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Static Web Crawling (requests, BeautifulSoup)",
    "text": "Static Web Crawling (requests, BeautifulSoup)\n\nUse requests to fetch HTML pages and BeautifulSoup to parse them\n\nExtract text, links, or tables based on HTML tags and class structures\n\nUse pandas.read_html() for tables, or manually parse with BeautifulSoup\n\nClean data using pandas and save with .to_csv()"
  },
  {
    "objectID": "posts/crawling.html#api-based-data-collection-requests-json-pandas",
    "href": "posts/crawling.html#api-based-data-collection-requests-json-pandas",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "API-Based Data Collection (requests, json, pandas)",
    "text": "API-Based Data Collection (requests, json, pandas)\n\nREST APIs provide structured data (JSON/XML) directly\n\nUse requests.get() and response.json() or json.loads() to parse responses\n\nConvert JSON to pandas.DataFrame for analysis and export\n\nMore stable and faster than HTML scraping"
  },
  {
    "objectID": "posts/crawling.html#javascript-based-dynamic-crawling-selenium",
    "href": "posts/crawling.html#javascript-based-dynamic-crawling-selenium",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "JavaScript-Based Dynamic Crawling (Selenium)",
    "text": "JavaScript-Based Dynamic Crawling (Selenium)\n\nJavaScript-rendered pages can’t be scraped with requests or BeautifulSoup\n\nUse Selenium to simulate browser actions (clicks, scrolling, etc.)\n\nExtract final content using driver.page_source after the page loads\n\nIdeal for infinite scrolls, pop-ups, and dynamic interactions"
  },
  {
    "objectID": "posts/crawling.html#login-and-session-management-requests.session-or-selenium",
    "href": "posts/crawling.html#login-and-session-management-requests.session-or-selenium",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Login and Session Management (requests.Session() or Selenium)",
    "text": "Login and Session Management (requests.Session() or Selenium)\n\nUse requests.Session() to maintain cookies and login credentials\n\nFor complex interactions, automate login via Selenium\n\nBeware of CAPTCHA or multi-factor authentication – prefer APIs if available"
  },
  {
    "objectID": "posts/crawling.html#automation-and-real-world-projects-1",
    "href": "posts/crawling.html#automation-and-real-world-projects-1",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Automation and Real-World Projects",
    "text": "Automation and Real-World Projects\n\nUse schedulers or job runners to automate crawling\n\nTools: schedule, APScheduler, cron (Linux), Task Scheduler (Windows)\n\nExample use cases:\n\nDaily news scraping into CSV\n\nMonitoring product price trends or real-time keywords\n\n\nInclude logging, duplicate checks, and date-stamping for reliability"
  },
  {
    "objectID": "posts/crawling.html#key-takeaways-1",
    "href": "posts/crawling.html#key-takeaways-1",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nStatic scraping: requests, BeautifulSoup, pandas\n\nAPI collection: requests, json, pandas\n\nDynamic scraping: Selenium for full browser interaction\n\nLogin/session: requests.Session() or automated login via Selenium\n\nAutomation: schedule, APScheduler, cron, Task Scheduler\n\nTogether, these tools can power scalable, real-world web crawling workflows"
  },
  {
    "objectID": "posts/crawling.html#summary",
    "href": "posts/crawling.html#summary",
    "title": "Static and Dynamic Web Crawling with R & Python",
    "section": "Summary",
    "text": "Summary\n\nR is great for statistical workflows and lightweight crawling combined with data wrangling.\nPython excels in scalable automation, complex website handling, and API-based data pipelines."
  },
  {
    "objectID": "posts/q14.html",
    "href": "posts/q14.html",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "",
    "text": "주사위 두 개를 굴려서 나온 눈의 수를 사용해서 두 자리 숫자를 크게 만드는 사람이 이기는 게임이다. 주사위를 처음 굴려서 나온 눈의 수를 10의 자리와 1의 자리 중 어느 곳에 사용할 지 먼저 결정해야 한다. 그런 다음 두 번째로 주사위를 굴려서 나온 눈의 수는 자동으로 남은 자리의 숫자로 사용된다.\n예를 들어, 첫 번째 주사위가 3인데 10의 자리로 결정했고, 두 번째 6이 나왔다면 결과는 36이 된다.\n어떤 전략을 사용해야 게임에 이길 가능성이 가장 클까?\n\n\n최선이라고 선택한 전략의 “two_dice.csv” 파일 총점수 및 평균\n\n# data 불러오기\ntwo_dice &lt;- read.csv(\"https://raw.githubusercontent.com/sw1kwon/Capstone1/refs/heads/main/two_dice.csv\", header=TRUE)\n\n\nhead(two_dice) # data 형태\n\n\nA data.frame: 6 × 2\n\n\n\ndice1\ndice2\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n\n\n\n\n1\n1\n4\n\n\n2\n1\n2\n\n\n3\n5\n3\n\n\n4\n6\n2\n\n\n5\n3\n3\n\n\n6\n1\n5\n\n\n\n\n\n\nnrow(two_dice) # data 길이\n\n1000000\n\n\n\n전략 1: 문제를 보자마자 떠오른 전략\n\n첫 번째 주사위가 3 이하이면 1의 자리, 4 이상이면 10의 자리에 배치\n이유: 주사위 눈이 총 6개이고 주사위를 총 2번 던지므로 1에서 6까지 반절씩 나누면 괜찮을 것 같음\n\n전략 2\n\n첫 번째 주사위가 4 이하면 1의 자리, 5 이상이면 10의 자리에 배치\n\n전략 3\n\n첫 번째 주사위가 2 이하면 1의 자리, 3 이상이면 10의 자리에 배치\n\n\n\n\n\n# dice1이 3 이하이면 dice2를 10의 자리로, 4 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result1 &lt;- ifelse(two_dice$dice1 &lt;= 3, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 3\n\n\n\ndice1\ndice2\nresult1\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n\n\n2\n1\n2\n21\n\n\n3\n5\n3\n53\n\n\n4\n6\n2\n62\n\n\n5\n3\n3\n33\n\n\n6\n1\n5\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result1)\n\n45241257\n\n\n\n# 평균\nmean(two_dice$result1)\n\n45.241257\n\n\n\n\n\n\n# dice1이 4 이하이면 dice2를 10의 자리로, 5 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result2 &lt;- ifelse(two_dice$dice1 &lt;= 4, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 4\n\n\n\ndice1\ndice2\nresult1\nresult2\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n41\n\n\n2\n1\n2\n21\n21\n\n\n3\n5\n3\n53\n53\n\n\n4\n6\n2\n62\n62\n\n\n5\n3\n3\n33\n33\n\n\n6\n1\n5\n51\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result2)\n\n44482521\n\n\n\n# 평균\nmean(two_dice$result2)\n\n44.482521\n\n\n\n\n\n\n# dice1이 2 이하이면 dice2를 10의 자리로, 3 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result3 &lt;- ifelse(two_dice$dice1 &lt;= 2, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 5\n\n\n\ndice1\ndice2\nresult1\nresult2\nresult3\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n41\n41\n\n\n2\n1\n2\n21\n21\n21\n\n\n3\n5\n3\n53\n53\n53\n\n\n4\n6\n2\n62\n62\n62\n\n\n5\n3\n3\n33\n33\n33\n\n\n6\n1\n5\n51\n51\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result3)\n\n44494923\n\n\n\n# 평균\nmean(two_dice$result3)\n\n44.494923\n\n\n\n\n\n\n# 열 평균 계산 및 비교\ncolMeans(two_dice[c(\"result1\", \"result2\", \"result3\")])\n\nresult145.241257result244.482521result344.494923\n\n\n\n전략 1의 평균이 제일 높아 가장 좋은 전략으로 생각은 되나 확실하지 않음\n전략 2의 평균보다 전략 3의 평균이 높음\n\n\n\n\n\n최선의 전략일 때 확률분포를 구하고 그래프로 그려라.\n\n# 패키지 로드\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\n\n# 모든 가능한 주사위 값 조합 (36개)\nd2 &lt;- expand.grid(dice1 = 1:6, dice2 = 1:6)\n\n\n# 두 자리 숫자(result1) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result1 = ifelse(dice1 &lt;= 3, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result1이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_1 &lt;- d2 %&gt;%\n  group_by(result1) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_1)\n\n# A tibble: 27 × 2\n   result1 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      13      0.0278\n 4      21      0.0278\n 5      22      0.0278\n 6      23      0.0278\n 7      31      0.0278\n 8      32      0.0278\n 9      33      0.0278\n10      41      0.0556\n# ℹ 17 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_1$result1)\n\n27\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_1$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_1$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                18                  9 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_1, aes(x = factor(result1), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 1)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# 두 자리 숫자(result2) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result2 = ifelse(dice1 &lt;= 4, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result2이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_2 &lt;- d2 %&gt;%\n  group_by(result2) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_2)\n\n# A tibble: 28 × 2\n   result2 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      13      0.0278\n 4      14      0.0278\n 5      21      0.0278\n 6      22      0.0278\n 7      23      0.0278\n 8      24      0.0278\n 9      31      0.0278\n10      32      0.0278\n# ℹ 18 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_2$result2)\n\n28\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_2$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_2$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                20                  8 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_2, aes(x = factor(result2), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 2)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# 두 자리 숫자(result3) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result3 = ifelse(dice1 &lt;= 2, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result3이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_3 &lt;- d2 %&gt;%\n  group_by(result3) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_3)\n\n# A tibble: 28 × 2\n   result3 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      21      0.0278\n 4      22      0.0278\n 5      31      0.0556\n 6      32      0.0556\n 7      33      0.0278\n 8      34      0.0278\n 9      35      0.0278\n10      36      0.0278\n# ℹ 18 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_3$result3)\n\n28\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_3$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_3$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                20                  8 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_3, aes(x = factor(result3), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 3)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n각 전략 별로 확률 분포가 다르게 나옴\n확률 분포만 보면 높은 숫자의 확률이 높은 전략 2가 좋아보이기도 함\n\n\n\n\n\n최선의 전략에서 기대 점수\n\n\n\nsum(prob_d2_1$result1 * prob_d2_1$probability)\n\n45.25\n\n\n\n\n\n\nsum(prob_d2_2$result2 * prob_d2_2$probability)\n\n44.5\n\n\n\n\n\n\nsum(prob_d2_3$result3 * prob_d2_3$probability)\n\n44.5\n\n\n\n\n\n\n전략 1의 기대 점수가 제일 높으므로 전략 1,2,3 중 최선의 전략은 전략 1이라고 할 수 있음\n전략 2와 전략 3의 기대 점수는 동일함\n\n\n\n\n\n공정한 주사위를 1개 던져서 나오는 결과를 \\(k\\)라고 할 때\n\\[P(X = k) = \\frac{1}{6}, \\quad k \\in \\{1, 2, 3, 4, 5, 6\\}\\]\n\\[E[X] = \\frac{1 + 2 + 3 + 4 + 5 + 6}{6} = \\frac{21}{6} = 3.5\\]\n첫 번째 주사위를 던져서 나온 결과를 \\(d\\) , 이후에 던질 두 번째 주사위의 결과를 \\(Y\\)라고 할 때\n\n\\(d\\)를 10의 자리에 둘 경우\n\n\\[E[10d + Y] = 10d + E[Y] = 10d + 3.5\\]\n\n\\(d\\)를 1의 자리에 둘 경우\n\n\\[E[10Y + d] = 10E[Y] + d = 10*3.5 + d = 35 + d\\]\n\\(d\\)를 어느 자리에 두는 것이 유리한지 비교해보기 위해 두 경우 기대값의 차를 구하면\n\\[E[10d + Y] - E[10Y + d] = (10d + 3.5) - (35 + d) = 9d - 31.5\\]\n이 차가 양수이면 10의 자리에 d를 넣는 것이 유리하고 음수이면 1의 자리에 d를 넣는 것이 유리함 [기대값이 큼]\n\n차가 양수일 때 \\(d \\in \\{4, 5, 6\\}\\)\n차가 음수일 때 \\(d \\in \\{1, 2, 3\\}\\)\n전략 2의 경우 \\(d = 4\\)일 때, 잘못된 선택을 하게 되어 기대값이 낮아짐\n전략 3의 경우 \\(d = 3\\)일 때, 잘못된 선택을 하게 되어 기대값이 낮아짐"
  },
  {
    "objectID": "posts/q14.html#section",
    "href": "posts/q14.html#section",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "",
    "text": "최선이라고 선택한 전략의 “two_dice.csv” 파일 총점수 및 평균\n\n# data 불러오기\ntwo_dice &lt;- read.csv(\"https://raw.githubusercontent.com/sw1kwon/Capstone1/refs/heads/main/two_dice.csv\", header=TRUE)\n\n\nhead(two_dice) # data 형태\n\n\nA data.frame: 6 × 2\n\n\n\ndice1\ndice2\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n\n\n\n\n1\n1\n4\n\n\n2\n1\n2\n\n\n3\n5\n3\n\n\n4\n6\n2\n\n\n5\n3\n3\n\n\n6\n1\n5\n\n\n\n\n\n\nnrow(two_dice) # data 길이\n\n1000000\n\n\n\n전략 1: 문제를 보자마자 떠오른 전략\n\n첫 번째 주사위가 3 이하이면 1의 자리, 4 이상이면 10의 자리에 배치\n이유: 주사위 눈이 총 6개이고 주사위를 총 2번 던지므로 1에서 6까지 반절씩 나누면 괜찮을 것 같음\n\n전략 2\n\n첫 번째 주사위가 4 이하면 1의 자리, 5 이상이면 10의 자리에 배치\n\n전략 3\n\n첫 번째 주사위가 2 이하면 1의 자리, 3 이상이면 10의 자리에 배치\n\n\n\n\n\n# dice1이 3 이하이면 dice2를 10의 자리로, 4 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result1 &lt;- ifelse(two_dice$dice1 &lt;= 3, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 3\n\n\n\ndice1\ndice2\nresult1\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n\n\n2\n1\n2\n21\n\n\n3\n5\n3\n53\n\n\n4\n6\n2\n62\n\n\n5\n3\n3\n33\n\n\n6\n1\n5\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result1)\n\n45241257\n\n\n\n# 평균\nmean(two_dice$result1)\n\n45.241257\n\n\n\n\n\n\n# dice1이 4 이하이면 dice2를 10의 자리로, 5 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result2 &lt;- ifelse(two_dice$dice1 &lt;= 4, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 4\n\n\n\ndice1\ndice2\nresult1\nresult2\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n41\n\n\n2\n1\n2\n21\n21\n\n\n3\n5\n3\n53\n53\n\n\n4\n6\n2\n62\n62\n\n\n5\n3\n3\n33\n33\n\n\n6\n1\n5\n51\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result2)\n\n44482521\n\n\n\n# 평균\nmean(two_dice$result2)\n\n44.482521\n\n\n\n\n\n\n# dice1이 2 이하이면 dice2를 10의 자리로, 3 이상이면 dice1을 10의 자리로 배치\ntwo_dice$result3 &lt;- ifelse(two_dice$dice1 &lt;= 2, two_dice$dice1 + two_dice$dice2 * 10, two_dice$dice1 * 10 + two_dice$dice2)\n\n\n# 결과 확인\nhead(two_dice)\n\n\nA data.frame: 6 × 5\n\n\n\ndice1\ndice2\nresult1\nresult2\nresult3\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n4\n41\n41\n41\n\n\n2\n1\n2\n21\n21\n21\n\n\n3\n5\n3\n53\n53\n53\n\n\n4\n6\n2\n62\n62\n62\n\n\n5\n3\n3\n33\n33\n33\n\n\n6\n1\n5\n51\n51\n51\n\n\n\n\n\n\n# 총점수\nsum(two_dice$result3)\n\n44494923\n\n\n\n# 평균\nmean(two_dice$result3)\n\n44.494923\n\n\n\n\n\n\n# 열 평균 계산 및 비교\ncolMeans(two_dice[c(\"result1\", \"result2\", \"result3\")])\n\nresult145.241257result244.482521result344.494923\n\n\n\n전략 1의 평균이 제일 높아 가장 좋은 전략으로 생각은 되나 확실하지 않음\n전략 2의 평균보다 전략 3의 평균이 높음"
  },
  {
    "objectID": "posts/q14.html#section-1",
    "href": "posts/q14.html#section-1",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "",
    "text": "최선의 전략일 때 확률분포를 구하고 그래프로 그려라.\n\n# 패키지 로드\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\n\n# 모든 가능한 주사위 값 조합 (36개)\nd2 &lt;- expand.grid(dice1 = 1:6, dice2 = 1:6)\n\n\n# 두 자리 숫자(result1) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result1 = ifelse(dice1 &lt;= 3, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result1이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_1 &lt;- d2 %&gt;%\n  group_by(result1) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_1)\n\n# A tibble: 27 × 2\n   result1 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      13      0.0278\n 4      21      0.0278\n 5      22      0.0278\n 6      23      0.0278\n 7      31      0.0278\n 8      32      0.0278\n 9      33      0.0278\n10      41      0.0556\n# ℹ 17 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_1$result1)\n\n27\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_1$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_1$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                18                  9 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_1, aes(x = factor(result1), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 1)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# 두 자리 숫자(result2) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result2 = ifelse(dice1 &lt;= 4, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result2이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_2 &lt;- d2 %&gt;%\n  group_by(result2) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_2)\n\n# A tibble: 28 × 2\n   result2 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      13      0.0278\n 4      14      0.0278\n 5      21      0.0278\n 6      22      0.0278\n 7      23      0.0278\n 8      24      0.0278\n 9      31      0.0278\n10      32      0.0278\n# ℹ 18 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_2$result2)\n\n28\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_2$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_2$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                20                  8 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_2, aes(x = factor(result2), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 2)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n# 두 자리 숫자(result3) 계산\nd2 &lt;- d2 %&gt;%\n  mutate(result3 = ifelse(dice1 &lt;= 2, dice1 + dice2 * 10, dice1 * 10 + dice2))\n\n\n# 각 result3이 나올 확률 계산 (각 조합은 1/36 확률)\nprob_d2_3 &lt;- d2 %&gt;%\n  group_by(result3) %&gt;%\n  summarise(probability = n() / 36)\n\n\n# 데이터프레임 확인\nprint(prob_d2_3)\n\n# A tibble: 28 × 2\n   result3 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1      11      0.0278\n 2      12      0.0278\n 3      21      0.0278\n 4      22      0.0278\n 5      31      0.0556\n 6      32      0.0556\n 7      33      0.0278\n 8      34      0.0278\n 9      35      0.0278\n10      36      0.0278\n# ℹ 18 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d2_3$result3)\n\n28\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d2_3$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d2_3$probability)\n\n\n0.0277777777777778 0.0555555555555556 \n                20                  8 \n\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d2_3, aes(x = factor(result3), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 2) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Two-digit Number Probability Distribution (Strategy 3)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n각 전략 별로 확률 분포가 다르게 나옴\n확률 분포만 보면 높은 숫자의 확률이 높은 전략 2가 좋아보이기도 함"
  },
  {
    "objectID": "posts/q14.html#section-2",
    "href": "posts/q14.html#section-2",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "",
    "text": "최선의 전략에서 기대 점수\n\n\n\nsum(prob_d2_1$result1 * prob_d2_1$probability)\n\n45.25\n\n\n\n\n\n\nsum(prob_d2_2$result2 * prob_d2_2$probability)\n\n44.5\n\n\n\n\n\n\nsum(prob_d2_3$result3 * prob_d2_3$probability)\n\n44.5\n\n\n\n\n\n\n전략 1의 기대 점수가 제일 높으므로 전략 1,2,3 중 최선의 전략은 전략 1이라고 할 수 있음\n전략 2와 전략 3의 기대 점수는 동일함"
  },
  {
    "objectID": "posts/q14.html#이론적-증명",
    "href": "posts/q14.html#이론적-증명",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "",
    "text": "공정한 주사위를 1개 던져서 나오는 결과를 \\(k\\)라고 할 때\n\\[P(X = k) = \\frac{1}{6}, \\quad k \\in \\{1, 2, 3, 4, 5, 6\\}\\]\n\\[E[X] = \\frac{1 + 2 + 3 + 4 + 5 + 6}{6} = \\frac{21}{6} = 3.5\\]\n첫 번째 주사위를 던져서 나온 결과를 \\(d\\) , 이후에 던질 두 번째 주사위의 결과를 \\(Y\\)라고 할 때\n\n\\(d\\)를 10의 자리에 둘 경우\n\n\\[E[10d + Y] = 10d + E[Y] = 10d + 3.5\\]\n\n\\(d\\)를 1의 자리에 둘 경우\n\n\\[E[10Y + d] = 10E[Y] + d = 10*3.5 + d = 35 + d\\]\n\\(d\\)를 어느 자리에 두는 것이 유리한지 비교해보기 위해 두 경우 기대값의 차를 구하면\n\\[E[10d + Y] - E[10Y + d] = (10d + 3.5) - (35 + d) = 9d - 31.5\\]\n이 차가 양수이면 10의 자리에 d를 넣는 것이 유리하고 음수이면 1의 자리에 d를 넣는 것이 유리함 [기대값이 큼]\n\n차가 양수일 때 \\(d \\in \\{4, 5, 6\\}\\)\n차가 음수일 때 \\(d \\in \\{1, 2, 3\\}\\)\n전략 2의 경우 \\(d = 4\\)일 때, 잘못된 선택을 하게 되어 기대값이 낮아짐\n전략 3의 경우 \\(d = 3\\)일 때, 잘못된 선택을 하게 되어 기대값이 낮아짐"
  },
  {
    "objectID": "posts/q14.html#section-3",
    "href": "posts/q14.html#section-3",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "1.",
    "text": "1.\n최선이라고 선택한 전략의 “three_dice.csv” 파일 총점수 및 평균\n\n# data 불러오기\nthree_dice &lt;- read.csv(\"https://raw.githubusercontent.com/sw1kwon/Capstone1/refs/heads/main/three_dice.csv\", header=TRUE)\n\n\nhead(three_dice) # data 형태\n\n\nA data.frame: 6 × 3\n\n\n\ndice1\ndice2\ndice3\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n\n\n\n\n1\n5\n2\n4\n\n\n2\n4\n2\n3\n\n\n3\n4\n2\n5\n\n\n4\n2\n5\n4\n\n\n5\n5\n5\n5\n\n\n6\n1\n1\n6\n\n\n\n\n\n\nnrow(three_dice) # data 길이\n\n1000000\n\n\n\n전략 1: 문제를 보자마자 떠오른 전략\n\n첫 번째 주사위가 1,2 면 1의 자리, 3,4 이면 10의 자리, 5,6 이면 100의 자리에 배치\n두 번째 주사위는 3 이하일 때 둘 중 낮은 자리, 4 이상일 때 둘 중 높은 자리에 배치\n이유: 주사위 눈이 총 6개이고 주사위를 총 3번 던지므로 1에서 6까지 3등분하면 괜찮을 것 같음\n\n전략 2\n\n첫 번째 주사위가 3 이하면 1의 자리, 4 이상이면 100의 자리에 배치\n첫 번째 주사위가 3 이하일 때\n\n두 번째 주사위가 3 이하이면 10의 자리, 4 이상이면 100의 자리\n\n첫 번째 주사위가 4 이상일 때\n\n두 번재 주사위가 3 이하이면 1의 자리, 4 이상이면 10의 자리\n\n\n전략 3\n\n첫 번째 주사위가 3 이하면 1의 자리, 4 이상이면 10의 자리에 배치\n첫 번째 주사위가 3 이하일 때\n\n두 번째 주사위가 3 이하이면 10의 자리, 4 이상이면 100의 자리\n\n첫 번째 주사위가 4 이상일 때\n\n두 번재 주사위가 3 이하이면 1의 자리, 4 이상이면 100의 자리\n\n\n\n\n전략 1\n\nthree_dice$result1 &lt;- ifelse(three_dice$dice1 %in% c(1,2),\n                   # 첫 번째 주사위가 1 또는 2 → dice1는 1의 자리, 남은 자리는 tens와 hundreds\n                   ifelse(three_dice$dice2 &lt;= 3,\n                          # 두 번째 주사위가 3 이하 → 낮은 자리: tens, 남은 높은 자리: hundreds\n                          three_dice$dice3 * 100 + three_dice$dice2 * 10 + three_dice$dice1,\n                          # 두 번째 주사위가 4 이상 → 높은 자리: hundreds, 남은 낮은 자리: tens\n                          three_dice$dice2 * 100 + three_dice$dice3 * 10 + three_dice$dice1),\n                   ifelse(three_dice$dice1 %in% c(3,4),\n                          # 첫 번째 주사위가 3 또는 4 → dice1는 10의 자리, 남은 자리는 hundreds와 ones\n                          ifelse(three_dice$dice2 &lt;= 3,\n                                 # 두 번째 주사위가 3 이하 → 낮은 자리: ones, 남은 높은 자리: hundreds\n                                 three_dice$dice3 * 100 + three_dice$dice1 * 10 + three_dice$dice2,\n                                 # 두 번째 주사위가 4 이상 → 높은 자리: hundreds, 남은 낮은 자리: ones\n                                 three_dice$dice2 * 100 + three_dice$dice1 * 10 + three_dice$dice3),\n                          # 첫 번째 주사위가 5 또는 6 → dice1는 100의 자리, 남은 자리는 tens와 ones\n                          ifelse(three_dice$dice2 &lt;= 3,\n                                 # 두 번째 주사위가 3 이하 → 낮은 자리: ones, 남은 높은 자리: tens\n                                 three_dice$dice1 * 100 + three_dice$dice3 * 10 + three_dice$dice2,\n                                 # 두 번째 주사위가 4 이상 → 높은 자리: tens, 남은 낮은 자리: ones\n                                 three_dice$dice1 * 100 + three_dice$dice2 * 10 + three_dice$dice3)))\n\n\n# 결과 확인\nhead(three_dice)\n\n\nA data.frame: 6 × 4\n\n\n\ndice1\ndice2\ndice3\nresult1\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n5\n2\n4\n542\n\n\n2\n4\n2\n3\n342\n\n\n3\n4\n2\n5\n542\n\n\n4\n2\n5\n4\n542\n\n\n5\n5\n5\n5\n555\n\n\n6\n1\n1\n6\n611\n\n\n\n\n\n\n# 총점수\nsum(three_dice$result1)\n\n503895228\n\n\n\n# 평균\nmean(three_dice$result1)\n\n503.895228\n\n\n\n\n전략 2\n\nthree_dice$result2 &lt;- ifelse(\n  three_dice$dice1 &lt;= 3,  # dice1이 3 이하면 일의 자리\n  ifelse(three_dice$dice2 &lt;= 3,  # dice2가 3 이하면 십의 자리, 4 이상이면 백의 자리\n         three_dice$dice1 + three_dice$dice2 * 10 + three_dice$dice3 * 100,  # dice2가 십의 자리, dice3가 백의 자리\n         three_dice$dice1 + three_dice$dice3 * 10 + three_dice$dice2 * 100), # dice2가 백의 자리, dice3가 십의 자리\n  ifelse(three_dice$dice2 &lt;= 3,  # dice1이 4 이상이면 백의 자리, dice2가 3 이하면 일의 자리\n         three_dice$dice2 + three_dice$dice3 * 10 + three_dice$dice1 * 100,  # dice2가 일의 자리, dice3가 십의 자리 \n         three_dice$dice3 + three_dice$dice2 * 10 + three_dice$dice1 * 100)  # dice2가 십의 자리, dice3가 일의 자리 \n)\n\n\n# 결과 확인\nhead(three_dice)\n\n\nA data.frame: 6 × 5\n\n\n\ndice1\ndice2\ndice3\nresult1\nresult2\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n5\n2\n4\n542\n542\n\n\n2\n4\n2\n3\n342\n432\n\n\n3\n4\n2\n5\n542\n452\n\n\n4\n2\n5\n4\n542\n542\n\n\n5\n5\n5\n5\n555\n555\n\n\n6\n1\n1\n6\n611\n611\n\n\n\n\n\n\n# 총점수\nsum(three_dice$result2)\n\n499792560\n\n\n\n# 평균\nmean(three_dice$result2)\n\n499.79256\n\n\n\n\n전략 3\n\nthree_dice$result3 &lt;- ifelse(\n  three_dice$dice1 &lt;= 3,  # dice1이 3 이하면 일의 자리\n  ifelse(three_dice$dice2 &lt;= 3,  # dice2가 3 이하면 십의 자리, 4 이상이면 백의 자리\n         three_dice$dice1 + three_dice$dice2 * 10 + three_dice$dice3 * 100,  # dice2가 십의 자리, dice3가 백의 자리\n         three_dice$dice1 + three_dice$dice3 * 10 + three_dice$dice2 * 100), # dice2가 백의 자리, dice3가 십의 자리\n  ifelse(three_dice$dice2 &lt;= 3,  # dice1이 4 이상이면 십의 자리, dice2가 3 이하면 일의 자리\n         three_dice$dice2 + three_dice$dice1 * 10 + three_dice$dice3 * 100,  # dice2가 일의 자리, dice3가 백의 자리 \n         three_dice$dice3 + three_dice$dice1 * 10 + three_dice$dice2 * 100)  # dice2가 백의 자리, dice3가 일의 자리 \n)\n\n\n# 결과 확인\nhead(three_dice)\n\n\nA data.frame: 6 × 6\n\n\n\ndice1\ndice2\ndice3\nresult1\nresult2\nresult3\n\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n5\n2\n4\n542\n542\n452\n\n\n2\n4\n2\n3\n342\n432\n342\n\n\n3\n4\n2\n5\n542\n452\n542\n\n\n4\n2\n5\n4\n542\n542\n542\n\n\n5\n5\n5\n5\n555\n555\n555\n\n\n6\n1\n1\n6\n611\n611\n611\n\n\n\n\n\n\n# 총점수\nsum(three_dice$result3)\n\n466002330\n\n\n\n# 평균\nmean(three_dice$result3)\n\n466.00233\n\n\n\n\n결론\n\n# 열 평균 계산 및 비교\ncolMeans(three_dice[c(\"result1\", \"result2\", \"result3\")])\n\nresult1503.895228result2499.79256result3466.00233\n\n\n\n전략 1의 평균이 제일 높아 가장 좋은 전략으로 생각은 되나 확실하지 않음\n전략 3의 평균은 다른 전략들에 비해 많이 떨어짐"
  },
  {
    "objectID": "posts/q14.html#section-4",
    "href": "posts/q14.html#section-4",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "2.",
    "text": "2.\n최선의 전략일 때 확률분포를 구하고 그래프로 그려라.\n\n# 패키지 로드\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n전략 1\n\n# 모든 가능한 주사위 값 조합 (216개)\nd3 &lt;- expand.grid(dice1 = 1:6, dice2 = 1:6, dice3 = 1:6)\n\n\n# 세 자리 숫자(result) 계산\nd3 &lt;- d3 %&gt;%\n  mutate(result1 = ifelse(d3$dice1 %in% c(1,2),\n                   # 첫 번째 주사위가 1 또는 2 → dice1는 1의 자리, 남은 자리는 tens와 hundreds\n                   ifelse(d3$dice2 &lt;= 3,\n                          # 두 번째 주사위가 3 이하 → 낮은 자리: tens, 남은 높은 자리: hundreds\n                          d3$dice3 * 100 + d3$dice2 * 10 + d3$dice1,\n                          # 두 번째 주사위가 4 이상 → 높은 자리: hundreds, 남은 낮은 자리: tens\n                          d3$dice2 * 100 + d3$dice3 * 10 + d3$dice1),\n                   ifelse(d3$dice1 %in% c(3,4),\n                          # 첫 번째 주사위가 3 또는 4 → dice1는 10의 자리, 남은 자리는 hundreds와 ones\n                          ifelse(d3$dice2 &lt;= 3,\n                                 # 두 번째 주사위가 3 이하 → 낮은 자리: ones, 남은 높은 자리: hundreds\n                                 d3$dice3 * 100 + d3$dice1 * 10 + d3$dice2,\n                                 # 두 번째 주사위가 4 이상 → 높은 자리: hundreds, 남은 낮은 자리: ones\n                                 d3$dice2 * 100 + d3$dice1 * 10 + d3$dice3),\n                          # 첫 번째 주사위가 5 또는 6 → dice1는 100의 자리, 남은 자리는 tens와 ones\n                          ifelse(d3$dice2 &lt;= 3,\n                                 # 두 번째 주사위가 3 이하 → 낮은 자리: ones, 남은 높은 자리: tens\n                                 d3$dice1 * 100 + d3$dice3 * 10 + d3$dice2,\n                                 # 두 번째 주사위가 4 이상 → 높은 자리: tens, 남은 낮은 자리: ones\n                                 d3$dice1 * 100 + d3$dice2 * 10 + d3$dice3)))\n        )\n\n\n# 각 result가 나올 확률 계산 (각 조합은 1/216 확률)\nprob_d3_1 &lt;- d3 %&gt;%\n  group_by(result1) %&gt;%\n  summarise(probability = n() / 216)\n\n\n# 데이터프레임 확인\nprint(prob_d3_1)\n\n# A tibble: 110 × 2\n   result1 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1     111     0.00463\n 2     112     0.00463\n 3     121     0.00463\n 4     122     0.00463\n 5     131     0.00926\n 6     132     0.00926\n 7     133     0.00463\n 8     141     0.00463\n 9     142     0.00463\n10     143     0.00463\n# ℹ 100 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d3_1$result1)\n\n110\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d3_1$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d3_1$probability)\n\n\n0.00462962962962963 0.00925925925925926  0.0138888888888889  0.0185185185185185 \n                 56                  22                  20                   4 \n 0.0231481481481481 \n                  8 \n\n\n\n# 그래프 크기 설정\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d3_1, aes(x = factor(result1), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 1) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Three-digit Number Probability Distribution (Strategy 1)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(size=4, angle = 90, hjust = 1)) + # x축 글자 크기 작게 설정\n  scale_y_continuous(breaks = sort(unique(prob_d3_1$probability)))\n\n\n\n\n\n\n\n\n\n\n전략 2\n\n# 세 자리 숫자(result) 계산\nd3 &lt;- d3 %&gt;%\n  mutate(result2 = ifelse(\n    d3$dice1 &lt;= 3,  # dice1이 3 이하면 일의 자리\n    ifelse(d3$dice2 &lt;= 3,  # dice2가 3 이하면 십의 자리, 4 이상이면 백의 자리\n         d3$dice1 + d3$dice2 * 10 + d3$dice3 * 100,  # dice2가 십의 자리, dice3가 백의 자리\n         d3$dice1 + d3$dice3 * 10 + d3$dice2 * 100), # dice2가 백의 자리, dice3가 십의 자리\n    ifelse(d3$dice2 &lt;= 3,  # dice1이 4 이상이면 백의 자리, dice2가 3 이하면 일의 자리\n         d3$dice2 + d3$dice3 * 10 + d3$dice1 * 100,  # dice2가 일의 자리, dice3가 십의 자리 \n         d3$dice3 + d3$dice2 * 10 + d3$dice1 * 100)  # dice2가 십의 자리, dice3가 일의 자리 \n)\n        )\n\n\n# 각 result가 나올 확률 계산 (각 조합은 1/216 확률)\nprob_d3_2 &lt;- d3 %&gt;%\n  group_by(result2) %&gt;%\n  summarise(probability = n() / 216)\n\n\n# 데이터프레임 확인\nprint(prob_d3_2)\n\n# A tibble: 108 × 2\n   result2 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1     111     0.00463\n 2     112     0.00463\n 3     113     0.00463\n 4     121     0.00463\n 5     122     0.00463\n 6     123     0.00463\n 7     131     0.00463\n 8     132     0.00463\n 9     133     0.00463\n10     211     0.00463\n# ℹ 98 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d3_2$result2)\n\n108\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d3_2$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d3_2$probability)\n\n\n0.00462962962962963  0.0138888888888889 \n                 54                  54 \n\n\n\n# 그래프 크기 설정\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d3_2, aes(x = factor(result2), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 1) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Three-digit Number Probability Distribution (Strategy 2)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(size=4, angle = 90, hjust = 1)) + # x축 글자 크기 작게 설정\n  scale_y_continuous(breaks = sort(unique(prob_d3_2$probability)))\n\n\n\n\n\n\n\n\n\n\n전략 3\n\n# 세 자리 숫자(result) 계산\nd3 &lt;- d3 %&gt;%\n  mutate(result3 = ifelse(\n      d3$dice1 &lt;= 3,  # dice1이 3 이하면 일의 자리\n      ifelse(d3$dice2 &lt;= 3,  # dice2가 3 이하면 십의 자리, 4 이상이면 백의 자리\n             d3$dice1 + d3$dice2 * 10 + d3$dice3 * 100,  # dice2가 십의 자리, dice3가 백의 자리\n             d3$dice1 + d3$dice3 * 10 + d3$dice2 * 100), # dice2가 백의 자리, dice3가 십의 자리\n      ifelse(d3$dice2 &lt;= 3,  # dice1이 4 이상이면 십의 자리, dice2가 3 이하면 일의 자리\n             d3$dice2 + d3$dice1 * 10 + d3$dice3 * 100,  # dice2가 일의 자리, dice3가 백의 자리 \n             d3$dice3 + d3$dice1 * 10 + d3$dice2 * 100)  # dice2가 백의 자리, dice3가 일의 자리 \n)\n        )\n\n\n# 각 result가 나올 확률 계산 (각 조합은 1/216 확률)\nprob_d3_3 &lt;- d3 %&gt;%\n  group_by(result3) %&gt;%\n  summarise(probability = n() / 216)\n\n\n# 데이터프레임 확인\nprint(prob_d3_3)\n\n# A tibble: 135 × 2\n   result3 probability\n     &lt;dbl&gt;       &lt;dbl&gt;\n 1     111     0.00463\n 2     112     0.00463\n 3     113     0.00463\n 4     121     0.00463\n 5     122     0.00463\n 6     123     0.00463\n 7     131     0.00463\n 8     132     0.00463\n 9     133     0.00463\n10     141     0.00463\n# ℹ 125 more rows\n\n\n\n# 결과로 생긴 두자리 수의 총 개수\nlength(prob_d3_3$result3)\n\n135\n\n\n\n# 확률의 합 = 1 확인\nsum(prob_d3_3$probability)\n\n1\n\n\n\n# 확률별 빈도수 확인\ntable(prob_d3_3$probability)\n\n\n0.00462962962962963 0.00925925925925926  0.0138888888888889 \n                 81                  27                  27 \n\n\n\n# 그래프 크기 설정\noptions(repr.plot.width = 12, repr.plot.height = 8)\n\n\n# 확률 분포 그래프 그리기 (확률값 표시 포함)\nggplot(prob_d3_3, aes(x = factor(result3), y = probability)) +\n  geom_bar(stat = \"identity\", fill = \"blue\", alpha = 0.7) +\n  geom_text(aes(label = sprintf(\"%.3f\", probability)), vjust = -0.3, size = 1) + # 확률값 표시 (소수점 3자리)\n  labs(title = \"Three-digit Number Probability Distribution (Strategy 3)\",\n       x = \"Result\",\n       y = \"Probability\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(size=4, angle = 90, hjust = 1)) + # x축 글자 크기 작게 설정\n  scale_y_continuous(breaks = sort(unique(prob_d3_3$probability)))\n\n\n\n\n\n\n\n\n\n\n결론\n\n각 전략 별로 확률 분포가 다르게 나옴\n전략 1만 유일하게 0.0139 이상의 확률을 가짐"
  },
  {
    "objectID": "posts/q14.html#section-5",
    "href": "posts/q14.html#section-5",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "3.",
    "text": "3.\n최선의 전략에서 기대 점수\n\n전략 1\n\nsum(prob_d3_1$result1 * prob_d3_1$probability)\n\n504\n\n\n\n\n전략 2\n\nsum(prob_d3_2$result2 * prob_d3_2$probability)\n\n499.875\n\n\n\n\n전략 3\n\nsum(prob_d3_3$result3 * prob_d3_3$probability)\n\n466.125\n\n\n\n\n결론\n\n전략 1의 기대 점수가 제일 높으므로 전략 1,2,3 중 최선의 전략은 전략 1이라고 할 수 있음\n전략 3의 기대 점수는 다른 전략에 비해 많이 낮음"
  },
  {
    "objectID": "posts/q14.html#section-6",
    "href": "posts/q14.html#section-6",
    "title": "Creating a Two-Digit Number from Two Dice Rolls: A Game Strategy",
    "section": "4.",
    "text": "4.\n이 게임에서 얻을 수 있는 일상생활이나 삶의 교훈 (자신의 경험 기반)\n\n이번 경험을 통해 인간의 직관이 때때로 놀라울 정도로 정확할 수 있다는 점을 다시금 실감했다. 위의 풀이가 모든 경우의 수를 고려한 최적의 해법임을 수학적으로 엄밀하게 증명할 수 있었지만, 흥미로웠던 것은 그 최선의 전략이 직관적으로 즉각 떠올랐다는 점이다. 이는 복잡한 계산을 거친 결과라기보다는 대칭과 균형을 고려하는 과정에서 자연스럽게 도출된 결론이었다. 자연이나 반복되는 일상 속에서도 이러한 직관이 예상보다 정확하게 작용하는 경우를 종종 경험한다.\n그러나 직관만을 절대적으로 신뢰할 수는 없다. 예컨대, 1.1번 문제의 확률 분포를 살펴봤을 때, 전략 2가 전략 1보다 우월해 보였지만, 기대값을 실제로 계산해본 결과 정반대의 결론이 도출되었다. 현실이 언제나 기대값대로 움직이는 것은 아니지만, 통계적 분석은 인간이 제시할 수 있는 근거 중 가장 객관적이고 신뢰할 만한 도구임을 부정할 수 없다. 결국, 직관과 수리적 분석이 조화를 이룰 때 보다 정교한 판단이 가능해진다는 점을 다시 한번 깨닫게 되었다."
  }
]